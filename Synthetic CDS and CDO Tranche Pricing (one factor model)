{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 825,
   "id": "d36fa008",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import scipy\n",
    "from scipy.stats import norm\n",
    "from scipy.integrate import quad\n",
    "import random\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "from math import comb\n",
    "from scipy.stats import binom\n",
    "import sympy\n",
    "import math\n",
    "from scipy import integrate\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 826,
   "id": "48dd5088",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Probability at least 3 defaults [0.0024287323219811426, 0.002711165136143723, 0.003011776695417391, 0.003330310976548595, 0.003666425885229224, 0.004019703171324586, 0.004389658359636513, 0.004775750445210315, 0.0051773911645398366, 0.0055939537088875516, 0.006024780792350824, 0.00646919202527077, 0.0069264905736663995, 0.007395969108425146, 0.007876915065040367, 0.00836861524672547, 0.008870359811727506, 0.009381445690438042, 0.009901179480195511, 0.010428879866106348, 0.010963879615270566, 0.011505527189908563, 0.012053188022348803, 0.012606245491904797, 0.013164101640545024, 0.013726177661059664, 0.01429191418826932, 0.014860771420771093, 0.015432229097823762, 0.016005786353260387, 0.01658096146580295, 0.017157291522861683, 0.017734332012786416, 0.01831165635864828, 0.018888855404913266, 0.019465536866835075, 0.020041324751022285, 0.020615858754418397, 0.02118879364784558, 0.021759798649304926, 0.02232855679138321, 0.022894764286359517, 0.023458129891953353, 0.02401837428006935, 0.02457522941039139, 0.025128437910207788, 0.02567775246148024, 0.026222935195783184, 0.02676375709745079, 0.027299997414972882, 0.0278314430804312, 0.02835788813653236, 0.0288791331705811, 0.029394984754530534, 0.029905254890052538, 0.03040976045738359, 0.030908322666504534, 0.031400766509017776, 0.03188692020889513, 0.032366614670017925, 0.03283968291823415, 0.0333059595353613, 0.03376528008228919, 0.03421748050798056, 0.0346623965408508, 0.03509986305846153, 0.035529713431063925, 0.03595177883387229, 0.036365887522272, 0.036771864063356204, 0.03716952851620466, 0.037558695552183344, 0.03793917350516869, 0.0383107633399548, 0.03867325752513388, 0.039026438794343116, 0.03937007877687172, 0.03970393647505026, 0.04002775656156494, 0.0403412674642853, 0.04064417919971336, 0.040936180907608526, 0.0412169380288815, 0.0414860890554236, 0.04174324176341436, 0.04198796881954261, 0.04221980262035166, 0.04243822919028943, 0.04264268090405329, 0.04283252774775921, 0.04300706672503045, 0.04316550889745531, 0.043306963368435064, 0.04343041726809149, 0.043534710432529294, 0.04361850293305671, 0.043680232800000676, 0.04371806003239706, 0.043729790993452575, 0.04371277402655019]\n"
     ]
    }
   ],
   "source": [
    "#1c for rho ranging from 0 to 0.9, calculate probabilities of at least n=3 before\n",
    "#plot dependence on rho\n",
    "#integrate over normal density to get rid of conditional m\n",
    "#use quad()for numerical integration\n",
    "\n",
    "t=5.0\n",
    "h=0.0075\n",
    "\n",
    "prob_list=[]\n",
    "i=0\n",
    "rho_list = np.linspace(0.00000001,0.9,100)\n",
    "\n",
    "\n",
    "\n",
    "for n in range(0,100):\n",
    "    \n",
    "    #prob(exactly 0)\n",
    "    def f(x):\n",
    "        tr=norm.ppf(np.exp(-t*h))\n",
    "        crit = (tr-x*np.sqrt(rho_list[n]))/(np.sqrt(1-rho_list[n]))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta= comb(8,0)*((1-gamma)**8)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "\n",
    "\n",
    "    I0= quad(f,-6,6)\n",
    "\n",
    "\n",
    "    #prob(exactly 1)\n",
    "    def f(x):\n",
    "        tr=norm.ppf(np.exp(-t*h))\n",
    "        crit = (tr-x*np.sqrt(rho_list[n]))/(np.sqrt(1-rho_list[n]))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta= comb(8,1)*(gamma)*((1-gamma)**7)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I1= quad(f,-6,6)\n",
    "\n",
    "\n",
    "    #prob(exactly 2)\n",
    "    def f(x):\n",
    "        tr=norm.ppf(np.exp(-t*h))\n",
    "        crit = (tr-x*np.sqrt(rho_list[n]))/(np.sqrt(1-rho_list[n]))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta= comb(8,2)*((gamma)**2)*((1-gamma)**6)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "\n",
    "    I2=quad(f,-10,10)\n",
    "\n",
    "    prob= 1-I0[0]-I1[0]-I2[0]\n",
    "    prob_list.append(prob)\n",
    "    \n",
    "\n",
    "\n",
    "plt.plot(rho_list,prob_list)\n",
    "plt.ylabel('Probability at least 3 defaults')\n",
    "plt.xlabel('rho')\n",
    "plt.title('Probability of at least 3 defaults before t=5 vs. rho')\n",
    "plt.show()\n",
    "\n",
    "print('Probability at least 3 defaults', prob_list)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 827,
   "id": "3db4589f",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Vfee 3rd to default CDS\n",
    "\n",
    "def vfee():\n",
    "    t_list = np.linspace(0.25,5,20)\n",
    "    survival_list=[]\n",
    "\n",
    "    \n",
    "    h=0.0075\n",
    "    rho=0.7\n",
    "    recovery=0.4\n",
    "\n",
    "    for j in range(0,len(t_list)):\n",
    "\n",
    "        def f(x):\n",
    "            tr=norm.ppf(np.exp(-(t_list[j])*h))\n",
    "            crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "            gamma=(1-norm.cdf(crit))\n",
    "            beta= comb(8,0)*(gamma**0)*((1-gamma)**8)\n",
    "            func = beta*norm.pdf(x)\n",
    "            return(func)\n",
    "\n",
    "        I0= quad(f,-6,6)\n",
    "\n",
    "\n",
    "        def f(x):\n",
    "            tr=norm.ppf(np.exp(-(t_list[j])*h))\n",
    "            crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "            gamma=(1-norm.cdf(crit))\n",
    "            beta= comb(8,1)*(gamma**1)*((1-gamma)**7)\n",
    "            func = beta*norm.pdf(x)\n",
    "            return(func)\n",
    "\n",
    "        I1= quad(f,-6,6)\n",
    "\n",
    "        def f(x):\n",
    "            tr=norm.ppf(np.exp(-(t_list[j])*h))\n",
    "            crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "            gamma=(1-norm.cdf(crit))\n",
    "            beta= comb(8,2)*(gamma**2)*((1-gamma)**6)\n",
    "            func = beta*norm.pdf(x)\n",
    "            return(func)\n",
    "\n",
    "        I2= quad(f,-6,6)\n",
    "        prob = 1-I0[0]-I1[0]-I2[0]\n",
    "\n",
    "        survival_list.append(1-prob)\n",
    "\n",
    "\n",
    "    vfee=0.25*sum(survival_list)\n",
    "    print('vfee=',vfee)\n",
    "    return vfee\n",
    "\n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 828,
   "id": "be8e98f4",
   "metadata": {},
   "outputs": [],
   "source": [
    "#Vcon 3rd to default CDS\n",
    "#assume interest is 0\n",
    "\n",
    "def vcon():\n",
    "\n",
    "    t_list = np.linspace(0,5,21)\n",
    "    survival_list=[]\n",
    "\n",
    "    s_diff_list=[]\n",
    "    # def vfee():\n",
    "    h=0.0075\n",
    "    rho=0.7\n",
    "    recovery=0.4\n",
    "\n",
    "    for j in range(0,len(t_list)):\n",
    "\n",
    "        def f(x):\n",
    "            tr=norm.ppf(np.exp(-(t_list[j])*h))\n",
    "            crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "            gamma=(1-norm.cdf(crit))\n",
    "            beta= comb(8,0)*(gamma**0)*((1-gamma)**8)\n",
    "            func = beta*norm.pdf(x)\n",
    "            return(func)\n",
    "\n",
    "        I0= quad(f,-6,6)\n",
    "\n",
    "\n",
    "        def f(x):\n",
    "            tr=norm.ppf(np.exp(-(t_list[j])*h))\n",
    "            crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "            gamma=(1-norm.cdf(crit))\n",
    "            beta= comb(8,1)*(gamma**1)*((1-gamma)**7)\n",
    "            func = beta*norm.pdf(x)\n",
    "            return(func)\n",
    "\n",
    "        I1= quad(f,-6,6)\n",
    "\n",
    "        def f(x):\n",
    "            tr=norm.ppf(np.exp(-(t_list[j])*h))\n",
    "            crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "            gamma=(1-norm.cdf(crit))\n",
    "            beta= comb(8,2)*(gamma**2)*((1-gamma)**6)\n",
    "            func = beta*norm.pdf(x)\n",
    "            return(func)\n",
    "\n",
    "        I2= quad(f,-6,6)\n",
    "        prob = 1-I0[0]-I1[0]-I2[0]\n",
    "\n",
    "        survival_list.append(1-prob)\n",
    "\n",
    "\n",
    "    for i in range (1,len(survival_list)):\n",
    "        s_diff= survival_list[i-1]-survival_list[i]\n",
    "        s_diff_list.append(s_diff)\n",
    "\n",
    "\n",
    "    vcon=sum(s_diff_list)\n",
    "    print('vcon =',vcon)\n",
    "    return vcon\n",
    "\n",
    "    \n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 829,
   "id": "a4eaff2c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "vcon = 0.039703934421481346\n",
      "vfee= 4.901695504667828\n",
      "The par spread is: 81.00040972286375\n"
     ]
    }
   ],
   "source": [
    "print(\"The par spread is:\",10000*vcon()/vfee())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 830,
   "id": "034609f2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "        0-3       3-6       6-9          9-12         12-22\n",
      "0  0.748085  0.067655  0.000482  4.559073e-07  4.559073e-07\n",
      "1  0.514318  0.196991  0.073685  2.782784e-02  2.782784e-02\n",
      "2  0.418614  0.204986  0.109567  6.159116e-02  6.159116e-02\n",
      "3  0.351637  0.195713  0.121858  8.024278e-02  8.024278e-02\n",
      "4  0.296865  0.180547  0.123358  8.902611e-02  8.902611e-02\n",
      "5  0.248379  0.162296  0.118683  9.133792e-02  9.133792e-02\n",
      "6  0.203091  0.141658  0.109628  8.883214e-02  8.883214e-02\n",
      "7  0.158657  0.118303  0.096582  8.201008e-02  8.201008e-02\n",
      "8  0.111886  0.090417  0.078354  6.995304e-02  6.995304e-02\n",
      "9  0.041872  0.040918  0.040313  3.985337e-02  3.985337e-02\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#2a graph of fraction of paths generating loss for various tranches\n",
    "\n",
    "t=5.0\n",
    "h=0.0075\n",
    "rho_list = np.linspace(0.00000001,0.999,10)\n",
    "prob_loss_list03=[]\n",
    "prob_loss_list36=[]\n",
    "prob_loss_list69=[]\n",
    "prob_loss_list912=[]\n",
    "prob_loss_list1222=[]\n",
    "\n",
    "for i in range(0,10):\n",
    "\n",
    "#0-3 tranche\n",
    "    def f(x):\n",
    "        tr=norm.ppf(np.exp(-t*h))\n",
    "        crit = (tr-x*np.sqrt(rho_list[i]))/(np.sqrt(1-rho_list[i]))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta1=binom.cdf(5,200,gamma)\n",
    "        func = beta1*norm.pdf(x)\n",
    "        return(func)\n",
    "    \n",
    "    I_special=quad(f,-6,6)[0]\n",
    "\n",
    "    prob_loss =1-I_special\n",
    "    prob_loss_list03.append(prob_loss)\n",
    "#3-6 tranche\n",
    "    \n",
    "    def f(x):\n",
    "        tr=norm.ppf(np.exp(-t*h))\n",
    "        crit = (tr-x*np.sqrt(rho_list[i]))/(np.sqrt(1-rho_list[i]))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.cdf(11,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    \n",
    "    I_special=quad(f,-6,6)[0]\n",
    "\n",
    "    prob_loss =1-I_special\n",
    "    prob_loss_list36.append(prob_loss)\n",
    "\n",
    "#6-9 tranche\n",
    "\n",
    "    def f(x):\n",
    "        tr=norm.ppf(np.exp(-t*h))\n",
    "        crit = (tr-x*np.sqrt(rho_list[i]))/(np.sqrt(1-rho_list[i]))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.cdf(17,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I_special=quad(f,-6,6)[0]\n",
    "\n",
    "    prob_loss =1-I_special\n",
    "    prob_loss_list69.append(prob_loss)\n",
    "    \n",
    "#9-12 tranche    \n",
    "    def f(x):\n",
    "        tr=norm.ppf(np.exp(-t*h))\n",
    "        crit = (tr-x*np.sqrt(rho_list[i]))/(np.sqrt(1-rho_list[i]))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.cdf(23,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    \n",
    "    I_special=quad(f,-6,6)[0]\n",
    "\n",
    "    prob_loss =1-I_special\n",
    "    prob_loss_list912.append(prob_loss)\n",
    "\n",
    "#12-22 tranche    \n",
    "    def f(x):\n",
    "        tr=norm.ppf(np.exp(-t*h))\n",
    "        crit = (tr-x*np.sqrt(rho_list[i]))/(np.sqrt(1-rho_list[i]))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.cdf(43,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    \n",
    "    I_special=quad(f,-6,6)[0]\n",
    "\n",
    "    prob =1-I_special\n",
    "    prob_loss_list1222.append(prob_loss)\n",
    "    \n",
    "\n",
    "\n",
    "df = pd.DataFrame(list(zip(prob_loss_list03, prob_loss_list36,prob_loss_list69,prob_loss_list912,prob_loss_list1222)),\n",
    "               columns =['0-3', '3-6','6-9','9-12','12-22'])\n",
    "print(df)\n",
    "\n",
    "plt.plot(rho_list, prob_loss_list69,prob_loss_list912)\n",
    "plt.xlim(xmin=0,xmax=1)\n",
    "plt.ylim(ymin=0,ymax=0.5)\n",
    "\n",
    "plt.ylabel('fraction of paths generating tranche loss')\n",
    "plt.xlabel('rho')\n",
    "plt.title('Tranches 6-9% and 9-12%')\n",
    "plt.show() \n",
    "    \n",
    "plt.plot(rho_list, prob_loss_list03)\n",
    "plt.xlim(xmin=0,xmax=1)\n",
    "\n",
    "plt.ylabel('fraction of paths generating tranche loss')\n",
    "plt.xlabel('rho')\n",
    "plt.title('0-3%')\n",
    "plt.show()\n",
    "\n",
    "plt.plot(rho_list, prob_loss_list36)\n",
    "plt.xlim(xmin=0,xmax=1)\n",
    "\n",
    "plt.ylabel('fraction of paths generating tranche loss')\n",
    "plt.xlabel('rho')\n",
    "plt.title('3-6%')\n",
    "plt.show()\n",
    "\n",
    "plt.plot(rho_list, prob_loss_list69)\n",
    "plt.xlim(xmin=0,xmax=1)\n",
    "\n",
    "plt.ylabel('fraction of paths generating tranche loss')\n",
    "plt.xlabel('rho')\n",
    "plt.title('6-9%')\n",
    "plt.show()\n",
    "\n",
    "plt.plot(rho_list, prob_loss_list912)\n",
    "plt.xlim(xmin=0,xmax=1)\n",
    "\n",
    "plt.ylabel('fraction of paths generating tranche loss')\n",
    "plt.xlabel('rho')\n",
    "plt.title('9-12%')\n",
    "plt.show()\n",
    "    \n",
    "    \n",
    "plt.plot(rho_list, prob_loss_list1222)\n",
    "plt.xlim(xmin=0,xmax=1)\n",
    "\n",
    "plt.ylabel('fraction of paths generating tranche loss')\n",
    "plt.xlabel('rho')\n",
    "plt.title('12-22%')\n",
    "plt.show() \n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 834,
   "id": "56216f23",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#2b expected loss as a function of time for 6-9% tranche\n",
    "\n",
    "t=5.0\n",
    "h=0.0075\n",
    "t_list = np.linspace(0,5,21)\n",
    "rho=0.25\n",
    "N=10**7\n",
    "\n",
    "exp_loss_listrho25=[]\n",
    "\n",
    "for i in range(0,21):\n",
    "\n",
    "\n",
    "#default 13,14,15,16,17,18\n",
    "    \n",
    "    def f13(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(13,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I13=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f14(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(14,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I14=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f15(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(15,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I15=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f16(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(16,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I16=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f17(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(17,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I17=1-quad(f,-6,6)[0]\n",
    "    \n",
    "\n",
    "#binom cdf 1-binom.cdf(17...)\n",
    "    def f(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.cdf(17,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I_special=1-quad(f,-6,6)[0]\n",
    "\n",
    "    expected_loss = I13+2*I14+3*I15+4*I16+5*I17+6*I_special\n",
    "    exp_loss_listrho25.append(N*expected_loss)\n",
    "    \n",
    "t=5.0\n",
    "h=0.0075\n",
    "t_list = np.linspace(0,5,21)\n",
    "rho=0.5\n",
    "N=10**7\n",
    "\n",
    "exp_loss_listrho50=[]\n",
    "\n",
    "for i in range(0,21):\n",
    "\n",
    "\n",
    "#default 13,14,15,16,17,18\n",
    "    \n",
    "    def f13(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(13,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I13=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f14(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(14,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I14=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f15(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(15,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I15=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f16(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(16,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I16=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f17(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(17,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I17=1-quad(f,-6,6)[0]\n",
    "\n",
    "#binom cdf 1-binom.cdf(17...)\n",
    "    def f(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.cdf(17,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I_special=1-quad(f,-6,6)[0]\n",
    "\n",
    "    expected_loss = I13+2*I14+3*I15+4*I16+5*I17+6*I_special\n",
    "    exp_loss_listrho50.append(N*expected_loss)\n",
    "    \n",
    "\n",
    "t=5.0\n",
    "h=0.0075\n",
    "t_list = np.linspace(0,5,21)\n",
    "rho=0.75\n",
    "N=10**7\n",
    "\n",
    "exp_loss_listrho75=[]\n",
    "\n",
    "for i in range(0,21):\n",
    "\n",
    "\n",
    "#default 13,14,15,16,17,18\n",
    "    \n",
    "    def f13(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(13,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I13=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f14(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(14,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I14=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f15(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(15,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I15=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f16(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(16,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I16=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f17(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(17,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I17=1-quad(f,-6,6)[0]\n",
    "\n",
    "#binom cdf 1-binom.cdf(17...)\n",
    "    def f(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.cdf(17,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I_special=1-quad(f,-6,6)[0]\n",
    "\n",
    "    expected_loss = I13+2*I14+3*I15+4*I16+5*I17+6*I_special\n",
    "    exp_loss_listrho75.append(N*expected_loss)\n",
    "    \n",
    "plt.plot(t_list, exp_loss_listrho25, label = \"rho=0.25\")\n",
    "plt.plot(t_list, exp_loss_listrho50, label = \"rho - 0.5\")\n",
    "plt.plot(t_list, exp_loss_listrho75, label = \"rho - 0.75\")\n",
    "plt.legend()\n",
    "plt.show()\n",
    "    \n",
    "    \n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 832,
   "id": "055ad868",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Par spread: 1016.8208973868819\n"
     ]
    }
   ],
   "source": [
    "#2c par spread\n",
    "\n",
    "t=5.0\n",
    "h=0.0075\n",
    "t_list = np.linspace(0,5,21)\n",
    "rho=0.5\n",
    "N=10**7\n",
    "\n",
    "exp_loss_listrho50=[]\n",
    "\n",
    "for i in range(0,21):\n",
    "\n",
    "\n",
    "#default 13,14,15,16,17,18\n",
    "    \n",
    "    def f13(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(13,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I13=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f14(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(14,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I14=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f15(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(15,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I15=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f16(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(16,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I16=1-quad(f,-6,6)[0]\n",
    "    \n",
    "    def f17(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.pmf(17,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I17=1-quad(f,-6,6)[0]\n",
    "\n",
    "#binom cdf 1-binom.cdf(17...)\n",
    "    def f(x):\n",
    "        tr=norm.ppf(np.exp(-1*t_list[i]*h))\n",
    "        crit = (tr-x*np.sqrt(rho))/(np.sqrt(1-rho))\n",
    "        gamma=(1-norm.cdf(crit))\n",
    "        beta=binom.cdf(17,200,gamma)\n",
    "        func = beta*norm.pdf(x)\n",
    "        return(func)\n",
    "    I_special=1-quad(f,-6,6)[0]\n",
    "\n",
    "    expected_loss = I13+2*I14+3*I15+4*I16+5*I17+6*I_special\n",
    "    exp_loss_listrho50.append(expected_loss)\n",
    "\n",
    "KL = 0.06*200   \n",
    "KU = 0.09*200\n",
    "deltat = 0.25\n",
    "\n",
    "vfee=[]\n",
    "for j in range(0,len(t_list)):\n",
    "    v = 0.25*((KU-KL)-(exp_loss_listrho50[j]))\n",
    "    vfee.append(v)\n",
    "VFee= N*sum(vfee)\n",
    "\n",
    "\n",
    "diff_list=[]\n",
    "for i in range (1,len(exp_loss_listrho50)):\n",
    "    diff = exp_loss_listrho50[i]-exp_loss_listrho50[i-1]\n",
    "    diff_list.append(diff)\n",
    "VCon=N*sum(diff_list)\n",
    "    \n",
    "\n",
    "    \n",
    "print('Par spread:', 10000*VCon/VFee)    \n",
    "\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
